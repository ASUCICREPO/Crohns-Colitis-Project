version: 0.2

phases:
  install:
    runtime-versions:
      nodejs: 18
      python: 3.11
    commands:
      - echo "Cloning public repo..."
      - git clone https://github.com/ASUCICREPO/Crohns-Colitis-Project.git .
      - echo "Installing dependencies..."
      - npm install -g aws-cdk@2.161.1
      - apt-get update --fix-missing || true
      - apt-get install -y jq || (curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o /usr/local/bin/jq && chmod +x /usr/local/bin/jq)
      - npm install -g @aws-amplify/cli
      
  pre_build:
    commands:
      - echo "Pre-build phase started on `date`"
      - cd Backend
      - npm install
      - npm run build
      
  build:
    commands:
      - echo "Build started for Crohn's Colitis project"
      - export STACK_NAME="CrohnsColitisQBusinessStack-$(date +%s)"
      - echo "Using stack name $STACK_NAME"
      - echo "Bootstrapping CDK..."
      - cdk bootstrap --require-approval never
      - echo "Deploying backend infrastructure..."
      - cdk deploy --require-approval never --outputs-file ../outputs.json CrohnsColitisQBusinessStack
      - echo "Extracting API endpoints..."
      - cd ..
      - export CHAT_API_URL=$(cat outputs.json | jq -r '.CrohnsColitisQBusinessStack.ChatEndpoint')
      - export EMAIL_API_URL=$(cat outputs.json | jq -r '.CrohnsColitisQBusinessStack.EmailEndpoint')
      - export CONVERSATION_API_URL=$(cat outputs.json | jq -r '.CrohnsColitisQBusinessStack.ConversationEndpoint')
      - export QBUSINESS_APP_ID=$(cat outputs.json | jq -r '.CrohnsColitisQBusinessStack.QBusinessApplicationId')
      - echo "Configuring frontend with API endpoints..."
      - ls -la
      - echo "Looking for Frontend directory..."
      - find . -name "*rontend*" -type d
      - |
        if [ -d "Frontend" ]; then
          echo "Frontend directory found, building..."
          cd Frontend
          echo "REACT_APP_CHAT_ENDPOINT=$CHAT_API_URL" > .env
          echo "REACT_APP_EMAIL_ENDPOINT=$EMAIL_API_URL" >> .env
          echo "REACT_APP_CONVERSATION_ENDPOINT=$CONVERSATION_API_URL" >> .env
          echo "REACT_APP_APPLICATION_ID=$QBUSINESS_APP_ID" >> .env
          echo "REACT_APP_REGION=us-west-2" >> .env
          npm install
          npm run build
        else
          echo "Frontend directory not found, skipping frontend build"
          echo "Backend deployment completed successfully"
        fi
      
  post_build:
    commands:
      - echo "Post-build phase started on `date`"
      - |
        if [ -d "Frontend/build" ]; then
          echo "Deploying frontend to Amplify..."
          
          # Create Amplify app
          APP_NAME="crohns-colitis-app"
          
          # Check if app exists
          if aws amplify get-app --app-id $APP_NAME 2>/dev/null; then
            echo "Amplify app exists, updating..."
          else
            echo "Creating new Amplify app..."
            aws amplify create-app --name $APP_NAME --repository https://github.com/ASUCICREPO/Crohns-Colitis-Project --platform WEB --environment-variables REACT_APP_CHAT_ENDPOINT=$CHAT_API_URL,REACT_APP_EMAIL_ENDPOINT=$EMAIL_API_URL,REACT_APP_CONVERSATION_ENDPOINT=$CONVERSATION_API_URL,REACT_APP_APPLICATION_ID=$QBUSINESS_APP_ID,REACT_APP_REGION=us-west-2 --build-spec 'version: 1\nfrontend:\n  phases:\n    preBuild:\n      commands:\n        - cd Frontend\n        - npm install\n    build:\n      commands:\n        - npm run build\n  artifacts:\n    baseDirectory: Frontend/build\n    files:\n      - "**/*"' > amplify-app.json
            
            APP_ID=$(cat amplify-app.json | jq -r '.app.appId')
            
            # Create branch
            aws amplify create-branch --app-id $APP_ID --branch-name main --enable-auto-build
            
            # Start deployment
            aws amplify start-deployment --app-id $APP_ID --branch-name main
            
            AMPLIFY_URL="https://main.$APP_ID.amplifyapp.com"
            echo "Frontend deployed at: $AMPLIFY_URL"
            echo "AMPLIFY_URL=$AMPLIFY_URL" >> deployment-info.txt
          fi
        else
          echo "Frontend build not found, skipping deployment"
        fi

artifacts:
  files:
    - outputs.json
    - deployment-info.txt
    - Frontend/build/**/*
  name: crohns-colitis-deployment

cache:
  paths:
    - Backend/node_modules/**/*
    - Frontend/node_modules/**/*